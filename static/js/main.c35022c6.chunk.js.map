{"version":3,"sources":["utils/currentDate.js","components/Search.js","components/Articles.js","App.js","index.js"],"names":["today","Date","getFullYear","getMonth","getDate","Search","props","className","type","placeholder","value","query","onChange","e","setQuery","target","onKeyPress","search","Articles","renderedResults","invalidSearch","results","map","result","href","url","rel","title","source","name","App","useState","setResults","invalid","setInvalid","a","key","axios","get","params","q","from","sortBy","data","articles","totalResults","ReactDOM","render","document","querySelector"],"mappings":"0NAEO,SAASA,IACZ,IAAIA,EAAQ,IAAIC,KAEhB,OADaD,EAAME,cAAgB,KAAOF,EAAMG,WAAW,GAAK,IAAMH,EAAMI,U,UCejEC,EAhBA,SAACC,GACZ,OACI,sBAAKC,UAAU,2BAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,oDAEJ,qBAAKA,UAAU,gCACf,qBAAKA,UAAU,wBACf,sBAAKA,UAAU,2CAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,MAAOJ,EAAMK,MAAOC,SAAU,SAACC,GAAD,OAAOP,EAAMQ,SAASD,EAAEE,OAAOL,QAAQM,WAAYV,EAAMW,SAClI,mBAAGV,UAAU,uBC0CdW,EAnDE,SAACZ,GAEd,IAAIa,EAEJ,GAA4B,IAAxBb,EAAMc,cAAoB,CAW1BD,EARQ,sBAAKZ,UAAU,sBAAf,UACI,qBAAKA,UAAU,SAAf,kDAGI,yDAKXD,EAAMe,UACXF,EAAkBb,EAAMe,QAAQC,KAAI,SAACC,GACjC,OACI,yBAAShB,UAAU,0BAAnB,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAQA,UAAU,wBAAlB,SACI,mBACIA,UAAU,YACViB,KAAMD,EAAOE,IACbV,OAAO,SAASW,IAAI,aAHxB,6BAQJ,6BAAKH,EAAOI,QACZ,yCAAYJ,EAAOK,OAAOC,KAA1B,OACA,+BAfkCN,EAAOE,SAyBrE,OACI,8BACKN,KCZEW,EA/BH,WAAM,IAAD,EAEYC,mBAAS,IAFrB,mBAEPpB,EAFO,KAEAG,EAFA,OAGeiB,mBAAS,IAHxB,mBAGPV,EAHO,KAGCW,EAHD,OAIeD,mBAAS,IAJxB,mBAIPE,EAJO,KAICC,EAJD,KAOPjB,EAAM,uCAAG,WAAMJ,GAAN,iBAAAsB,EAAA,0DACRxB,GAAmB,UAAVE,EAAEuB,IADH,gCAEcC,IAAMC,IAHvB,4EAG+B,CAC/BC,OAAO,CACHC,EAAE7B,EACF8B,KAAK,GAAD,OAAKzC,EAAL,KACJ0C,OAAO,iBANR,gBAEAC,EAFA,EAEAA,KAOPX,EAAWW,EAAKC,UAChBV,EAAWS,EAAKE,cAChB/B,EAAS,IAXF,2CAAH,sDAgBR,OACI,gCACI,cAAC,EAAD,CAAQH,MAAOA,EAAOG,SAAUA,EAAUG,OAAQA,IAClD,cAAC,EAAD,CAAUI,QAASA,EAASD,cAAea,QC7B3Da,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.c35022c6.chunk.js","sourcesContent":["\r\n\r\nexport function today(){\r\n    let today = new Date();\r\n    const date = today.getFullYear() + '-' + (today.getMonth()+1) + '-' + today.getDate();\r\n    return  date;\r\n}","import React from 'react';\r\nimport './app.css';\r\n\r\nconst Search = (props) => {\r\n    return(\r\n        <div className=\"ui inverted segment main\">            \r\n            <div className=\"ui inverted divider center\">\r\n                <h1>News Central App</h1>\r\n            </div>\r\n            <div className=\"ui inverted left icon input\"></div>\r\n            <div className=\"ui inverted divider\"></div>\r\n            <div className=\"ui fluid inverted transparent icon input\">\r\n                <input type=\"text\" placeholder=\"Search...\" value={props.query} onChange={(e) => props.setQuery(e.target.value)} onKeyPress={props.search} />\r\n                <i className=\"search icon\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './app.css';\r\n\r\n\r\nconst Articles = (props) => {\r\n\r\n    let renderedResults \r\n\r\n    if( props.invalidSearch === 0){        \r\n        function invalidSearch(){\r\n            return (  \r\n                <div className=\"ui negative message\">\r\n                    <div className=\"header\">\r\n                        Search couldn't find a valid result.\r\n                    </div>\r\n                        <p>Please try again</p>\r\n                </div>\r\n            ) \r\n        }\r\n        renderedResults = invalidSearch();\r\n    }else if(props.results ){\r\n        renderedResults = props.results.map((result)=>{\r\n            return(\r\n                <article className=\"ui relaxed divided list\" key={result.url} >\r\n                    <div className=\"item \">\r\n                        <div className=\"content main\">\r\n                            <div className=\"middle aligned content\">\r\n                                <div    className=\"right floated content\">\r\n                                    <a \r\n                                        className=\"ui button\"\r\n                                        href={result.url}\r\n                                        target=\"_blank\" rel=\"noreferrer\"    \r\n                                    >\r\n                                    Go to Article\r\n                                    </a>\r\n                                </div>\r\n                                <h2>{result.title}</h2>                                \r\n                                <p> Source:{result.source.name} </p>                            \r\n                                <hr />\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                </article>                \r\n            )\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            {renderedResults}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles;","import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport {today} from './utils/currentDate';\r\nimport Search from './components/Search';\r\nimport Articles from './components/Articles';\r\n\r\n\r\nconst App = () =>{\r\n\r\n    const[query, setQuery] = useState('');\r\n    const[results,setResults] = useState([]);\r\n    const[invalid,setInvalid] = useState([]);\r\n\r\n    const URL = 'http://newsapi.org/v2/everything?apiKey=9e9906e1ae674954841e68f222314edb/';\r\n    const search = async(e)=>{\r\n        if(query && e.key === 'Enter'){\r\n            const {data} = await axios.get(URL,{\r\n                params:{\r\n                    q:query,\r\n                    from: `${today}&`,\r\n                    sortBy:'popularity&',                \r\n                },\r\n            });\r\n            setResults(data.articles);\r\n            setInvalid(data.totalResults);\r\n            setQuery('');\r\n        }\r\n    };\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Search query={query} setQuery={setQuery} search={search}/>\r\n                <Articles results={results} invalidSearch={invalid}/>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n   \r\n\r\n    \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, document.querySelector('#root')\r\n)"],"sourceRoot":""}